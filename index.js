/////////////////////////////////////////////////////////////////////////
// Для примера создадим функцию которая возвращает массив
function calcValues(a, b) {
    return [
        a + b,
        undefined, //a - b,
        a * b,
        a / b
    ]
}

//console.log(calcValues(42, 10))

/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
// Старый подход деструктуризации массива
//const result = calcValues(42, 10)
//let sum = result[0]
//let sub = result[1]
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
// Новый подход деструктуризации массива
// дополнительная запятая, позволяет пропустить индекс и не создавать переменную, которой мы пользоваться не собираемся
// также можем использовать оператор ...REST
// можем задавать переменной дефолтное значение, если вдруг она по какой то причине не определена
const [sum, sub = 'Вычитания нет', mult, ...other] = calcValues(42, 10)
console.log(sum, sub, mult, other)
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////
// Для примера создадим объект
const persone = {
    name: 'Max',
    age: 20,
    address: {
        country: 'Russia',
        city: 'Moscow'
    }
}

/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
// Новый подход деструктуризации объектов
// можем задавать переменной дефолтное значение, если вдруг она по какой то причине не определена
// можем использовать другую переменную (неодноименную по ключу name: firstName) 


/* const {
    name: firstName = 'Без имени', 
    age, 
    address: {country, city: myCity}, 
    car = 'Машины нет'
} = persone


console.log(firstName, age, country, myCity, car)
 */


// мы можем применять оператор REST
//const {name, ...info} = persone

//console.log(name, info)

/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////





/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
// PRACTICE
// старый подход
/* function logPersone(per) {
    console.log(per.name + ' ' + per.age)
}

logPersone(persone) */



// новый подход
function logPersone({name, age}) {
    console.log(name + ' ' + age)
}

logPersone(persone)

/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////